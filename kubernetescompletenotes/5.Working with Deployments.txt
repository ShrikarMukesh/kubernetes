About Deployments
===========================
=> A ReplicaSet ensures that a specified number of pod replicas are running at any given time. 

=> Deployment is a higher-level concept that manages ReplicaSets and provides declarative updates to Pods along with other useful features like Rolling Updates, Rollbacks

=>  It is recommend using Deployments instead of directly using ReplicaSets

kubectl explain deployments

========================
Deployment Demo #1
========================
YAML Configuration file for Deployment : --- mydeployment.yml
-------------------------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myjlc-deployment
spec:
  selector:
    matchLabels:
      app: myjlc-app
  replicas: 5
  template:
    metadata:
      name: myjlc-pod
      labels:
        app: myjlc-app
    spec:
      containers:
        - name: myjlc-container
          image: nginx
          ports:
            - containerPort: 8080


===============================
scp myreplicaset1.yml ubuntu@18.117.160.249:/home/ubuntu

kubectl create -f  mydeployment.yml

kubectl get pods

kubectl get deployments

kubectl get replicasets

kubectl get pods

kubectl get pods -o wide

kubectl get pods --show-labels

kubectl describe deployment myjlc-deployment

kubectl describe replicaset myjlc-deployment-5965c7b654

kubectl describe pod myjlc-deployment-5965c7b654-4csvx

=====================================
kubectl get pods 

kubectl scale replicaset myjlc-deployment-5965c7b654  --replicas=7

kubectl get pods 

kubectl scale replicaset myjlc-deployment-5965c7b654  --replicas=3

kubectl get pods 

kubectl delete replicaset myjlc-deployment-5965c7b654

kubectl get pods 


Rollouts and Vesrions:
-------------------------------
kubectl rollout status deployment/myjlc-deployment

kubectl rollout history deployment/myjlc-deployment


Updating a Deployment
--------------------------------
kubectl set image deployment/myjlc-deployment myjlc-container=nginx:1.20.2

kubectl rollout history deployment/myjlc-deployment

kubectl rollout status deployment/myjlc-deployment

kubectl rollout undo deployment/myjlc-deployment

Scaling a Deployment 
------------------------------
kubectl get pods 

kubectl scale deployment/myjlc-deployment --replicas=10

kubectl get pods 

kubectl scale deployment/myjlc-deployment --replicas=2

kubectl get pods 

AutoScaling
===============
When Horizontal Pod Autoscaling (HPA) is enabled in your cluster,

kubectl autoscale deployment/nginx-deployment --min=10 --max=15 --cpu-percent=80

Deleting a Deployment 
------------------------------
kubectl delete deployment myjlc-deployment


