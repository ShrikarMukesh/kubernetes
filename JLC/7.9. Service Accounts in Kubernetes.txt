Master :
ssh ubuntu@18.219.124.171

***CKAD - Certified Kubernetes Application Developer
CKA   - Certified Kubernetes Administrator
CKS  - Certified Kubernetes Security Specialist

Configurations
============================
9) Service Accounts in Kubernetes
============================
=> A service account provides an identity for processes that run in a Pod.

=> When you  access the cluster using kubectl, you are authenticated by the apiserver as a particular User Account (currently this is usually admin). 

=> Processes in containers inside pods can also contact the apiserver. When they do, they are authenticated as a particular Service Account (may be default or custom specified by you).

Two Types of Accounts
1) User Accounts
2) Service Accounts

Use the Default Service Account to access the API server
-------------------------------------------------------------------------
By Default, One Service Account will be created called "default".

Every namespace has a default service account resource called default. 


kubectl get serviceaccounts

kubectl describe serviceaccount default

kubectl get serviceaccounts/default -o yaml

secrets:
- name: default-token-k2hfd

kubectl get secrets

kubectl describe secret default-token-k2hfd


=> First Creates the Secret with Access Token

=> Then Creates the Default Service Account by Injecting the Secret into Service Account.

=> When you create a pod, then default service account and its token will be mounted into the Pod as Volume Mount automatically 


============================
mypod17.yml
====================
apiVersion: v1
kind: Pod
metadata:
  name: jlcpod
spec:
  containers:
    - name: mynginx
      image: nginx

=======================================
scp mypod17.yml ubuntu@18.219.124.171:/home/ubuntu/myconfig
=============================

kubectl create -f mypod17.yml

kubectl get pods

kubectl describe pod jlcpod

 Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-pcdw8 (ro)

Volumes:
  kube-api-access-tnftt:
    Type:                    Projected (a volume that contains injected data from multiple sources)
 

kubectl exec jlcpod -it -- sh

# cd /var/run/secrets/kubernetes.io/serviceaccount
# cat token
# exit

kubectl delete pod jlcpod 

==========================================================
You can access the API Server from inside a pod using automatically mounted service account credentials.

In version 1.6+, you can opt out of automounting API credentials for a service account by setting automountServiceAccountToken: false on the service account:

============================
mypod18.yml
====================
apiVersion: v1
kind: Pod
metadata:
  name: jlcpod 
spec:
  containers:
    - name: mynginx
      image: nginx
     automountServiceAccountToken: false
 

=======================================
scp mypod18.yml ubuntu@18.219.124.171:/home/ubuntu/myconfig
=============================

kubectl create -f mypod18.yml

kubectl get pods

kubectl describe pod jlcpod 

  Mounts:         <none>

 Volumes:            <none>

kubectl exec jlcpod  -it -- sh

# cd /var/run

# exit

kubectl delete pod jlcpod 
=====================================
Creating Service Account
--------------------------------
kubectl get serviceaccounts

kubectl create serviceaccount myjlcapp-sa

kubectl get serviceaccounts

kubectl describe serviceaccount myjlcapp-sa

kubectl get serviceaccounts/myjlcapp-sa -o yaml

secrets:
- name: myjlcapp-sa-token-tk5ld

kubectl describe secret myjlcapp-sa-token-tk5ld

kubectl get secrets

============================
myservice-account.yml
====================
apiVersion: v1
kind: ServiceAccount
metadata:
  name: myjlcbank-sa


=======================================
scp myservice-account.yml ubuntu@18.219.124.171:/home/ubuntu/myconfig
=============================
kubectl create -f myservice-account.yml

kubectl get serviceaccounts

kubectl describe serviceaccount  myjlcbank-sa

kubectl get serviceaccounts/myjlcbank-sa -o yaml

secrets:
- name: myjlcbank-sa-token-mtgfb

kubectl describe secret myjlcbank-sa-token-mtgfb

kubectl get secrets


Inject Service Accounts into Pods
============================
mypod19.yml
====================
apiVersion: v1
kind: Pod
metadata:
  name: jlcpod
spec:
  serviceAccountName: myjlcapp-sa
 
  volumes:
  - name: myjlcapp-volume
    projected:
      sources:
      - serviceAccountToken:
          path: myjlcapp-volume

  containers:
  - name: mynginx
    image: nginx
    volumeMounts:
    - mountPath: /var/run/secrets/jlctokens
      name: myjlcapp-volume
  

=======================================
scp mypod19.yml ubuntu@18.219.124.171:/home/ubuntu/myconfig
=============================

kubectl create -f mypod19.yml

kubectl get pods

kubectl describe pod jlcpod

 Mounts:
      /var/run/secrets/jlctokens from myjlcapp-volume (rw)
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-m4bhf (ro)

Volumes:
  myjlcapp-volume:
    Type:Projected (a volume that contains injected data from multiple sources)

  kube-api-access-m4bhf:
    Type:Projected (a volume that contains injected data from multiple sources)


kubectl exec jlcpod -it -- sh
# cd /var/run/secrets/

# cd kubernetes.io/serviceaccount

# cd jlctokens
# exit

kubectl delete pod jlcpod  

============================
mypod20.yml
====================
apiVersion: v1
kind: Pod
metadata:
  name: jlcpod
spec:
  automountServiceAccountToken: false
  serviceAccountName: myjlcbank-sa
  
  volumes:
  - name: myjlcbank-volume
    projected:
      sources:
      - serviceAccountToken:
          path: myjlcbank-volume

  containers:
  - name: mynginx
    image: nginx
    volumeMounts:
    - mountPath: /var/run/secrets/jlctokens
      name: myjlcbank-volume
  
  

 =======================================
scp mypod20.yml ubuntu@18.219.124.171:/home/ubuntu/myconfig
=============================

kubectl create -f mypod20.yml

kubectl get pods

kubectl describe pod jlcpod

  Mounts:
      /var/run/secrets/jlctokens from myjlcbank-volume (rw)
Volumes:
  myjlcbank-volume:
    Type:                    Projected (a volume that contains injected data from multiple sources)

kubectl exec jlcpod -it -- sh

# cd /var/run/secrets/
# ls -l
# cd jlctokens

# exit

kubectl delete pod jlcpod  




