Master :
ssh ubuntu@18.117.160.249

Worker -1 
ssh ubuntu@3.133.97.125

Worker -2
ssh ubuntu@3.142.140.60

 Share a Cluster with Namespaces
===========================
=> Namespaces provides a mechanism for isolating groups of resources within a single cluster. 

=>Names of resources need to be unique within a namespace, but not across namespaces. 

=> Namespaces cannot be nested inside one another and each Kubernetes resource can only be in one namespace.

When to Use Multiple Namespaces
========================
=> Namespaces are intended for use in environments with many users spread across multiple teams.

=> Namespaces are a way to divide cluster resources between multiple users (via resource quota).


Working with Namespaces
========================
kubectl get namespace
kubectl get namespaces

kubectl get namespaces kube-system

kubectl describe namespaces default

kubectl describe namespaces kube-system

kubectl create namespace jlc-system

kubectl create namespace cep-test / cep-dev / cep-prepod / cep-prod

kubectl get namespaces

kubectl describe namespace jlc-system

kubectl get pods -n kube-system

kubectl get pods -n jlc-system

kubectl get pods --all-namespaces        

kubectl run mypod1 --image nginx  --namespace=jlc-system
 -------------->  kubectl run mypod1 --image nginx  --namespace=cep-dev

kubectl run mypod2 --image tomcat   --namespace=jlc-system
--------------->  kubectl run mypod1 --image nginx  --namespace=cep-prod
kubectl get pods

kubectl get pods -n jlc-system

kubectl delete namespace cep-dev ---> It will delete all the pods inside the name spaces

Create a new YAML file called my-namespace.yaml with the contents:

hello-nm.yml
==========
apiVersion: v1
kind: Namespace
metadata:
  name: hello-namespace

===============================
scp hello-nm.yml ubuntu@18.191.136.78:/home/ubuntu/mynms

 scp book-store-nm.yml  ubuntu@35.200.154.20:/home/ubuntu/namespaces
 
kubectl create -f  hello-nm.yml


Let's create two new namespaces to hold our work.
=========
dev-nm.json
==========
{
  "apiVersion": "v1",
  "kind": "Namespace",
  "metadata": {
    "name": "development",
    "labels": {
      "name": "development"
    }
  }
}

scp dev-nm.json ubuntu@35.200.154.20:/home/ubuntu/namespaces

scp prod-nm.json ubuntu@35.200.154.20:/home/ubuntu/namespaces

kubectl create -f dev-nm.json

=========
prod-nm.json
==========
{
  "apiVersion": "v1",
  "kind": "Namespace",
  "metadata": {
    "name": "production",
    "labels": {
      "name": "production"
    }
  }
}

scp prod-nm.json ubuntu@18.191.136.78:/home/ubuntu/mynms

kubectl create -f prod-nm.json

kubectl get namespaces 
kubectl get namespaces --show-labels

kubectl delete namespace production
kubectl delete namespace development


